using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Text;
using System.Collections.Generic;
using System.Linq;
using Spark;
using Spark.Compiler;
using Spark.Compiler.ChunkVisitors;
using Spark.Compiler.NodeVisitors;
using Spark.Parser.Markup;

namespace NRails
{
  /// <summary>
  /// Description of NRailsExtensionFactory.
  /// </summary>
  class NRailsExtensionFactory: ISparkExtensionFactory
  {
     public CreateExtension(_context : VisitorContext, node : ElementNode) : ISparkExtension 
     {
         match (node.Name)
         {
             | "test" => TestExtension()
             | _ => null
         }
     }
  }
  
  class TestExtension : ISparkExtension
  {
        public VisitNode(_visitor : INodeVisitor, _body : IList[Node], _chunks : IList[Chunk]) : void
        {
            
        }

        public VisitChunk(_visitor : IChunkVisitor, location : OutputLocation, _chunks : IList[Chunk], output : StringBuilder) : void 
        {
            when (location == OutputLocation.RenderMethod)
            {
                _ = output.AppendLine("//this was a test");
            }
        }
  }
}
