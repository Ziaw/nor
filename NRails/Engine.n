using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
//using System.Collections.Generic;
using System.Linq;
using RikMigrations;
using RikMigrations.Providers;

namespace NRails
{
  /// <summary>
  /// Description of Engine.
  /// </summary>
  public class Engine
  {
      [Accessor]
      cfg : Configuration;
      
      public this(cfg : Configuration)
      {
          this.cfg = cfg;
      }
      
      public GetTables() : list[TableDef]
      {
          GetTables(cfg.Env);
      }
      
      public GetTables(env : string) : list[TableDef]
      {
          // todo: вынести в провайдер
          def connStr = cfg.GetConnectionString(env);
          using (def dbProv = MssqlProvider(null))
          {
              dbProv.ConnectionString = connStr.ConnectionString;
              
              def tableConvert(t)
              {
                  t.LoadColumnsAndConstraints(dbProv);
                  TableDef(
                       name = t.Name,
                       columns = t.Columns.Map(c => 
                       ColumnDef(
                             name = c.Name,
                             length = c.Length,
                             isAutoGenerated = c.IsAutoGenerated,
                             isPrimaryKey = c.IsPrimaryKey,
                             allowNull = c.IsNullable,
                             @type = c.@Type
                 )));
               }
              
              MigrationGenerator.GetTables(dbProv).Map(tableConvert);
          }
      }
  }
}
